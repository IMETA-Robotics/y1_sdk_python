<launch>

  <!-- master arm right -->
  <node pkg="y1_controller" type="y1_controller.py" name="master_arm_right" output="screen"> 
    <!-- CAN ID -->
    <param name="arm_can_id" value="can0"/>
    <!-- arm status and joint state feedback frequency (HZ) -->
    <param name="arm_feedback_rate" value="400"/>
    <!-- arm control type: leader_arm(remote master arm), follower_arm(remote slave arm),
                           normal_arm(normal control arm) -->
    <param name="arm_control_type" value="leader_arm"/>
    <!-- 0: nothing, 1: gripper, 2: teaching pendant, 3: gripper and teaching pendant -->
    <param name="arm_end_type" value="0"/>
    <!-- whether to enable robotic arm -->
    <param name="auto_enable" value="true"/>

    <!-- end pose and joint position feedback -->
    <param name="arm_joint_state_topic" value="/master_arm_right/joint_states"/>
    <!-- joint motor status feedback -->
    <param name="arm_status_topic" value="/master_arm_right/arm_status"/>
  </node>

  <!-- master arm left -->
  <node pkg="y1_controller" type="y1_controller.py" name="master_arm_left" output="screen"> 
    <!-- CAN ID -->
    <param name="arm_can_id" value="can2"/>
    <!-- arm status and joint state feedback frequency (HZ) -->
    <param name="arm_feedback_rate" value="400"/>
    <!-- arm control type: leader_arm(remote master arm), follower_arm(remote slave arm),
                           normal_arm(normal control arm) -->
    <param name="arm_control_type" value="leader_arm"/>
    <!-- 0: nothing, 1: gripper, 2: teaching pendant, 3: gripper and teaching pendant -->
    <param name="arm_end_type" value="0"/>
    <!-- whether to enable robotic arm -->
    <param name="auto_enable" value="true"/>

    <!-- end pose and joint position feedback -->
    <param name="arm_joint_state_topic" value="/master_arm_left/joint_states"/>
    <!-- joint motor status feedback -->
    <param name="arm_status_topic" value="/master_arm_left/arm_status"/>
  </node>

</launch>